name: Test Dyninst

on:
  pull_request: [] 
  push: 
    branches:
      - master
  
jobs:
  build:
    permissions:
      packages: read
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:

        # Testing containers named by ubuntu version for now
        ubuntu: ["20.04"]

    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Make Space For Build
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc

      - name: Set Organization Name for Packages Registry
        env:
          org: ${{ github.event.repository.owner.login }}
        run: echo "org=${org}" >> $GITHUB_ENV

      - name: Build Test Container
        run: |
          cd docker/
          docker build -f Dockerfile.test --build-arg dyninst_base=ghcr.io/${org}/dyninst-ubuntu-${{ matrix.ubuntu }}:latest -t dyninst-test ../
          
  analyze:
    name: Analyze Dyninst
    needs: build
    container: dyninst-test
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'python' ]

    steps:

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
